name: rideway
services:
  # Nginx reverse proxy to handle routing
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"  # Single port exposed
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./backend/static:/var/www/static:ro  # Serve static files
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

  backend:
    image: python:3.11-slim
    working_dir: /app
    # Remove external port mapping - only internal
    expose:
      - "8000"
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_URL=sqlite:///./data/motorcycle_maintenance.db
      - PYTHONPATH=/app
      - UPLOAD_DIR=static/uploads
      - DEFAULT_TIMEZONE=Europe/Amsterdam
      - DEFAULT_CURRENCY=EUR
      - CORS_ORIGINS=http://localhost:8080,https://your-tunnel-domain.com
    command: >
      bash -c "
        apt-get update && apt-get install -y gcc curl &&
        pip install -r requirements.txt &&
        mkdir -p data static/uploads &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: node:18-alpine  
    working_dir: /app
    # Remove external port mapping - only internal
    expose:
      - "3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - ./frontend/.env.local
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080/api  # Through nginx
      - NODE_ENV=development
    command: >
      sh -c "
        npm install &&
        npm run dev
      "
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
