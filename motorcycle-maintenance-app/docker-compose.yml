name: rideway
services:
  # Nginx reverse proxy to handle routing
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"  # Single port exposed
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./backend/static:/var/www/static:ro  # Serve static files
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

  backend:
    build: ./backend
    expose:
      - "8060"
    volumes:
      - ./backend:/app
      - ./backend/data:/app/data  # Persist database
      - ./backend/static:/app/static  # Persist uploads
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_URL=sqlite:///./data/motorcycle_maintenance.db
      - PYTHONPATH=/app
      - UPLOAD_DIR=static/uploads
      - DEFAULT_TIMEZONE=Europe/Amsterdam
      - DEFAULT_CURRENCY=EUR
      - CORS_ORIGINS=http://localhost:8080,http://localhost:3000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8060/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./frontend
    expose:
      - "3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Prevent node_modules from being overwritten
      - /app/.next  # Prevent build cache issues
    environment:
      # Use relative URL since nginx handles routing
      - NEXT_PUBLIC_API_URL=/api/v1
      - NODE_ENV=development
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3